tip#1
Ищите экземпляры GitLab на целевом объекте или принадлежащие целевому объекту. 
Когда вы наткнетесь на панель входа в GitLab, перейдите в /explore. Неверно сконфигурированные экземпляры не требуют аутентификации для просмотра внутренних проектов. Как только вы войдете, используйте функцию поиска, чтобы найти пароли, ключи и т. д. Это довольно большой вектор атаки, и сегодня я, наконец, раскрываю его, потому что я уверен, что это поможет многим из вас решить некоторые критические проблемы.
расходы

tip#2
Bug Bounty Tip: тестируйте приложения компании, которые стоят денег или требуют ручной настройки. Скорее всего, лишь немногие или никто не проверил бы его, оставив его уязвимым.
Если вы нашли IDOR, в котором вы можете изменять данные других, не вскакивайте со своего места, чтобы сообщить об этом> измените его на полезную нагрузку XSS, и если входные данные не очищены, а переменные эхо-выведены без экранирования. затем IDOR>XSS>ATO.

tip#3
Ищите активы, связанные с хакатоном. Я имею в виду, что иногда компании проводят хакатоны и предоставляют участникам специальный доступ к определенным конечным точкам API и/или временным учетным данным. Я нашел экземпляры GIT, которые были настроены для хакатонов, полные информации, которая позволила мне несколько раз найти больше проблем в цели.

tip#4
Сохраняйте все результаты перебора вашего каталога, чтобы при выходе CVE, такого как Drupalgeddon2, вы могли искать ранее найденные экземпляры (cat dirsearch/reports// | grep INSTALL.mysql.txt | grep 200 | less)

tip#5
Когда у вас есть форма, всегда пытайтесь изменить метод запроса с POST на GET, чтобы улучшить оценку CVSS. Например, демонстрация возможности эксплуатации CSRF с помощью тега [img] лучше, чем отправка ссылки жертве.